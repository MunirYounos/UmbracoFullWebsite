//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.10.102
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

namespace Umbraco.Web.PublishedContentModels
{
	// Mixin content Type 1103 with alias "headerProperties"
	/// <summary>HeaderProperties</summary>
	public partial interface IHeaderProperties : IPublishedContent
	{
		/// <summary>LogoTitle</summary>
		string LogoTitle { get; }

		/// <summary>macro In Grid</summary>
		Newtonsoft.Json.Linq.JToken MacroInGrid { get; }

		/// <summary>MacroRender</summary>
		IHtmlString MacroRender { get; }

		/// <summary>siteLogo</summary>
		IPublishedContent SiteLogo { get; }
	}

	/// <summary>HeaderProperties</summary>
	[PublishedContentModel("headerProperties")]
	public partial class HeaderProperties : PublishedContentModel, IHeaderProperties
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "headerProperties";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public HeaderProperties(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<HeaderProperties, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// LogoTitle: Add page title here.
		///</summary>
		[ImplementPropertyType("logoTitle")]
		public string LogoTitle
		{
			get { return GetLogoTitle(this); }
		}

		/// <summary>Static getter for LogoTitle</summary>
		public static string GetLogoTitle(IHeaderProperties that) { return that.GetPropertyValue<string>("logoTitle"); }

		///<summary>
		/// macro In Grid: add macro
		///</summary>
		[ImplementPropertyType("macroInGrid")]
		public Newtonsoft.Json.Linq.JToken MacroInGrid
		{
			get { return GetMacroInGrid(this); }
		}

		/// <summary>Static getter for macro In Grid</summary>
		public static Newtonsoft.Json.Linq.JToken GetMacroInGrid(IHeaderProperties that) { return that.GetPropertyValue<Newtonsoft.Json.Linq.JToken>("macroInGrid"); }

		///<summary>
		/// MacroRender
		///</summary>
		[ImplementPropertyType("macroRender")]
		public IHtmlString MacroRender
		{
			get { return GetMacroRender(this); }
		}

		/// <summary>Static getter for MacroRender</summary>
		public static IHtmlString GetMacroRender(IHeaderProperties that) { return that.GetPropertyValue<IHtmlString>("macroRender"); }

		///<summary>
		/// siteLogo
		///</summary>
		[ImplementPropertyType("siteLogo")]
		public IPublishedContent SiteLogo
		{
			get { return GetSiteLogo(this); }
		}

		/// <summary>Static getter for siteLogo</summary>
		public static IPublishedContent GetSiteLogo(IHeaderProperties that) { return that.GetPropertyValue<IPublishedContent>("siteLogo"); }
	}
}
