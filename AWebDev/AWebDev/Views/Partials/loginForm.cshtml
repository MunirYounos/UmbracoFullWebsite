@inherits Umbraco.Web.Mvc.UmbracoTemplatePage


@using System.Web.Mvc.Html
@using ClientDependency.Core.Mvc
@using Umbraco.Web
@using Umbraco.Web.Models
@using Umbraco.Web.Controllers

@{
    var loginModel = new LoginModel();

    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();
    Html.RequiresJs("/umbraco_client/ui/jquery.js");
    Html.RequiresJs("/umbraco_client/Application/JQuery/jquery.validate.min.js");
    Html.RequiresJs("/umbraco_client/Application/JQuery/jquery.validate.unobtrusive.min.js");
}

@* NOTE: This RenderJsHere code should be put on your main template page where the rest of your script tags are placed *@
@Html.RenderJsHere()

@if (!Members.GetCurrentLoginStatus().IsLoggedIn)
{
    using (Html.BeginUmbracoForm<UmbLoginController>("HandleLogin"))
    {

        <fieldset class="login__inner">
            <h4 class="login__title">Login area</h4>
            <br />
            <div class="form-group">
                @Html.LabelFor(m => loginModel.Username, new { @class = "control-label" })
                <div class="login__inner-in">
                    @Html.TextBoxFor(m => loginModel.Username, new { @class = "form-control", placeholder = "Username" })
                    @Html.ValidationMessageFor(m => loginModel.Username, "", new { @class = "field-validation-error" })
                </div>
            </div>
            <br />
            <div class="form-group">
                @Html.LabelFor(m => loginModel.Password, new { @class = "control-label" })
                <div class="login__inner-in">
                    @Html.PasswordFor(m => loginModel.Password, new { @class = "form-control", placeholder = "Password" })
                    @Html.ValidationMessageFor(m => loginModel.Password, "", new { @class = "field-validation-error" })
                </div>

            </div>
            <div class="form-group">
                <div class="col-sm-6 col-centered">
                    <button class="btn btn-footer">Login</button>
                </div>
            </div>
        </fieldset>
    }
}
else
{
    <div class="afterlogins">
        <p>
            You are currently logged in as
            @Members.GetCurrentLoginStatus().Name
        </p>
        <p>
            Your email is @Members.GetCurrentLoginStatus().Email
        </p>
    </div>


        var logoutModel = new PostRedirectModel();
        logoutModel.RedirectUrl = "/";
        using (Html.BeginUmbracoForm<UmbLoginStatusController>
        ("HandleLogout"))
        {

        <button class="btn btn-footer">Logout</button>
        @Html.HiddenFor(m => logoutModel.RedirectUrl)
        }



 }
